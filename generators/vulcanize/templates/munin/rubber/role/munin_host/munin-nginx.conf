<%
  @path = "/etc/nginx/nginx.conf"
  @additive = ["# rubber-munin-start", "# rubber-munin-end"]
%>


http
{
  include           /etc/nginx/mime.types;
  default_type      application/octet-stream;

  sendfile          on;
  tcp_nopush        on;
  tcp_nodelay       off;

  gzip              on;
  gzip_http_version 1.0;
  gzip_comp_level   2;
  gzip_proxied      any;
  gzip_types        text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  # configure log format like to Apache's "combined" log format
  log_format        main
                      '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_cookie"';

  error_log         /mnt/nginx/logs/internal-error.log notice;
  access_log        /mnt/nginx/logs/internal-access.log main;

  # auth_basic            "Restricted";
  # auth_basic_user_file  <%= RAILS_ROOT + "/config/internal.auth" %>;

  # This server is setup to serve www.
  server
  {
    listen 8080;
    client_max_body_size 10M;

    server_name <%= rubber_env.domain %>;

    root /var/www/munin;


    location /
    {
      # If the file exists as a static file serve it directly without
      # running all the other rewrite tests on it
      if (-f $request_filename)
      {
        break;
      }

      # check for index.html for directory index
      # if its there on the filesystem then rewite
      # the url to add /index.html to the end of it
      # and then break to send it to the next config rules.
      if (-f $request_filename/index.html)
      {
        rewrite (.*) $1/index.html break;
      }
    }
  }
}
