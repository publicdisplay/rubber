# All variables can also be overridden on the role and/or host level by creating
# a sub level to the config under roles and hosts
# e.g. to install mysql only on db role, and awstats only on web01:
#
# packages: [ruby]
# roles:
#   db:
#     packages: [mysql]
# hosts:
#   web01:
#     packages: [awstats]

# REQUIRED The amazon keys used to create instances
#
aws_access_key: XXX
aws_secret_access_key: YYY

# REQUIRED:  The name of the amazon keypair and location of its private key
#
# NOTE: for some reason Capistrano requires you to have both the public and
# the private key in the same folder, the public key should have the
# extension ".pub".
ec2_key_name: gsg-keypair
ec2_key_file: ~/.ec2/id_rsa-gsg-keypair

# REQUIRED: the ami and instance type for creating instances
#
# Ubuntu 7.10 Gutsy Base 32-bit http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1065
ec2_instance: ami-ed22c784
# m1.small or m1.large or m1.xlarge
ec2_instance_type: m1.small

# REQUIRED: The timezone the server should be in
timezone: US/Eastern

# REQUIRED: the domain all the instances should be associated with
#
domain: foo.com

# OPTIONAL: The provider(nettica|dyndns)/username/password for updating a dynamic dns service with the instance alias and ip
dns_provider:
dns_user:
dns_password:
dns_ttl:

# OPTIONAL: The packages to install on all instances
packages: [build-essential, ruby-full, ruby1.8-dev, rake, irb, subversion]

# OPTIONAL: The gems to install on all instances
gems: [rails]

# OPTIONAL: A string prepended to shell command strings that cause multi
# statement shell commands to fail fast.  You may need to comment this out
# on some platforms, but it works for me on linux/osx with a bash shell
stop_on_error_cmd: "function error_exit { exit 99; }; trap error_exit ERR"

# OPTIONAL: The filename for the database server config file.  This allows
#           rubber to bootstrap the db by generating the config for the db
#           server before the dbn is needed by your app (e.g. moving datdir
#           to /mnt for mysql)
#
# db_config: my.cnf

# OPTIONAL: You can also define your own variables here for use when transforming config files
#
mongrel_base_port: 8000
mongrel_count: 8

# OPTIONAL: Role specific overrides
roles:
  web:
    packages: [nginx]
  app:
    gems: [mongrel, mongrel_cluster]

# OPTIONAL: Host specific overrides
hosts:
  somehost:
    packages: []
